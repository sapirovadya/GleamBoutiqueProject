@model List<Product>

@using Microsoft.AspNetCore.Http

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="author" content="Untree.co">
    <link rel="shortcut icon" href="favicon.png">

    <meta name="description" content="" />
    <meta name="keywords" content="bootstrap, bootstrap4" />

    <!-- Bootstrap CSS -->
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="/css/tiny-slider.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <title>Shop</title>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>

<body>

    <!-- Start Header/Navigation -->
    <nav class="custom-navbar navbar navbar navbar-expand-md navbar-dark bg-dark" arial-label="Furni navigation bar">

        <div class="container">
            <a class="navbar-brand" href="index.html">Furni<span>.</span></a>

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarsFurni" aria-controls="navbarsFurni" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarsFurni">
                <ul class="custom-navbar-nav navbar-nav ms-auto mb-2 mb-md-0">
                    <li class="nav-item ">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li class="active"><a class="nav-link" href="../Shop/Shop">Shop</a></li>
                </ul>

                <ul class="custom-navbar-cta navbar-nav mb-2 mb-md-0 ms-5">
                    <li><a class="nav-link" href="../User/SignIn"><img src="~/images/user.svg"></a></li>
                    <li><a class="nav-link" href="../Shop/Cart"><img src="~/images/cart.svg"></a></li>
                </ul>
            </div>
        </div>

    </nav>
    <!-- End Header/Navigation -->
    <!-- Start Hero Section -->
    <div class="hero" style="padding-bottom: 10px; padding-top: 10px;">
        <div class="container">
            <div class="row justify-content-between">
                <div class="col-lg-5">
                    <div class="intro-excerpt">
                        <h1>Shop</h1>
                    </div>
                </div>
                <div class="col-lg-7">

                </div>
            </div>
        </div>
    </div>
    <!-- End Hero Section -->

    <div class="container mt-5">
        <div class="row">

            <!-- Search form -->
            <div class="col-md-12 mb-3">
                <div class="col-md-12 mb-3">
                    <form action="SearchProduct" method="get">
                        <div class="input-group">
                            <input type="text" class="form-control" name="searchKeyword" placeholder="Enter the product name or part of it" aria-label="Search" aria-describedby="button-search">
                            <button class="btn btn-outline-primary" type="submit" id="button-search">Search</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-3">

                <form action="FilterResults" method="GET">
                    <h4>Filter by:</h4>

                    <!-- Category -->
                    <div class="mb-3">
                        <label for="category" class="form-label">Category:</label>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="necklace" name="categories" value="necklace">
                            <label class="form-check-label" for="necklace">Necklaces</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="bracelet" name="categories" value="bracelet">
                            <label class="form-check-label" for="bracelet">Bracelets</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="earrings" name="categories" value="earrings">
                            <label class="form-check-label" for="earrings">Earrings</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="ring" name="categories" value="ring">
                            <label class="form-check-label" for="ring">Rings</label>
                        </div>
                    </div>

                    <!-- Material -->
                    <div class="mb-3">
                        <label for="material" class="form-label">Material:</label>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="gold" name="materials" value="gold">
                            <label class="form-check-label" for="gold">Gold</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="silver" name="materials" value="silver">
                            <label class="form-check-label" for="silver">Silver</label>
                        </div>
                    </div>

                    <!-- Karat -->
                    <div class="mb-3">
                        <label for="karat" class="form-label">Karat:</label>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="karat14" name="karats" value="14">
                            <label class="form-check-label" for="karat14">14</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="karat18" name="karats" value="18">
                            <label class="form-check-label" for="karat18">18</label>
                        </div>
                    </div>

                    <!-- Sale Price -->
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="salePrice" name="salePrice" value="1">
                            <label class="form-check-label" for="salePrice">On Sale</label>
                        </div>
                    </div>

                    <input type="hidden" id="sortHidden" name="sort" value="">
                    <button class="btn btn-outline-primary" type="submit" id="button-search">Filter</button>
                </form>
            </div>


            <div class="col-md-9">
                <!-- Sort by -->
                <div class="row mb-3">
                    <label for="sort" class="col-sm-2 col-form-label">Sort by:</label>
                    <div class="col-sm-10">
                        <div class="custom-select" style="width: 150px;">
                            <select id="sort" name="sort" class="form-select" onchange="sortProducts(this)">
                                <option value="lowToHigh">Low to High</option>
                                <option value="highToLow">High to Low</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="untree_co-section product-section before-footer-section">
                    <div class="container">
                        <div class="row">
                            @foreach (Product pro in Model)
                            {
                                <!-- Display all products -->
                                <div class="col-12 col-md-4 col-lg-3 mb-5">
                                    <div class="product-item">
                                        <a href="@Url.Action("ProductDetails", "Shop", new { id = pro.Pid })">
                                            <div class="out-of-stock-label" style="display: @(pro.Amount == 0 ? "block" : "none")">Sold Out</div>
                                            <img src="/images/@(pro.PName).jpg" class="img-fluid product-thumbnail" style="height: 300px; width: auto;">
                                        </a>
                                        <h3 class="product-title">@pro.PName</h3>

                                        @if (pro.Sale_price != 0)
                                        {
                                            <del class="text-muted">@pro.OriginPrice ₪</del><br />
                                            <strong class="text-danger">@pro.Sale_price ₪</strong>
                                        }
                                        else
                                        {
                                            <strong>@pro.OriginPrice ₪</strong>
                                        }
                                        <div id="errorMessageContainer" style="display: none;" class="alert alert-danger" role="alert"></div>

                                        @if (pro.Amount > 0)
                                        {
                                            <span class="icon-cross">
                                                <img src="/images/cross.svg" class="img-fluid addToCartButton" data-proid="@pro.Pid" data-amount="1" data-stock="@pro.Amount" onclick="addToCart('@pro.Pid', '@pro.Amount')" />
                                            </span>
                                        }
                                    </div>
                                </div>
                                <!-- End display -->
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script>
    function addToCart(proid, stock) {
        var formData = new FormData();
        formData.append("proid", proid);
        formData.append("amount", 1);
        formData.append("stock", stock);

        $.ajax({
            url: '@Url.Action("AddToCart", "Shop")',
            type: 'post',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                alert(response.successMessage);

            },
            error: function (response) {
                alert(response.responseJSON.errorMessage);
            }
        });
    }
        </script>

        <script>$(document).ready(function () {
               
                const urlParams = new URLSearchParams(window.location.search);
                const categories = urlParams.getAll('categories');
                const materials = urlParams.getAll('materials');
                const karats = urlParams.getAll('karats');
                const salePrice = urlParams.get('salePrice');
                const sort = urlParams.get('sort');

                categories.forEach(category => {
                    $(`input[name="categories"][value="${category}"]`).prop('checked', true);
                });

                materials.forEach(material => {
                    $(`input[name="materials"][value="${material}"]`).prop('checked', true);
                });

                karats.forEach(karat => {
                    $(`input[name="karats"][value="${karat}"]`).prop('checked', true);
                });

                if (salePrice === '1') {
                    $(`input[name="salePrice"]`).prop('checked', true);
                }

                $('#sort').val(sort); 

                $('#sort').change(function () {
                    $('#sort').val($(this).val());
                });
            });</script>

        <script>function sortProducts(selectElement) {
                var sortOption = selectElement.value;
                window.location.href = '/Shop/sortProduct?sortOption=' + sortOption;
            }</script>
        <script>document.addEventListener('DOMContentLoaded', function () {
                // Function to update selected filters display
                function updateSelectedFiltersDisplay() {
                    const selectedFiltersList = document.getElementById('selectedFiltersList');
                    selectedFiltersList.innerHTML = ''; // Clear previous selections

                    // Get all checked checkboxes for categories, materials, and karats
                    const checkedCategories = document.querySelectorAll('input[name="categories"]:checked');
                    const checkedMaterials = document.querySelectorAll('input[name="materials"]:checked');
                    const checkedKarats = document.querySelectorAll('input[name="karats"]:checked');
                    const onSale = document.querySelector('input[name="salePrice"]:checked');

                    // Function to add filter to the display list
                    function addFilter(label) {
                        const listItem = document.createElement('li');
                        listItem.textContent = label;
                        selectedFiltersList.appendChild(listItem);
                    }

                    // Add checked categories to the display
                    checkedCategories.forEach(function (checkbox) {
                        addFilter(checkbox.nextElementSibling.textContent);
                    });

                    // Add checked materials to the display
                    checkedMaterials.forEach(function (checkbox) {
                        addFilter(checkbox.nextElementSibling.textContent);
                    });

                    // Add checked karats to the display
                    checkedKarats.forEach(function (checkbox) {
                        addFilter(checkbox.nextElementSibling.textContent);
                    });

                    // Add on sale filter to the display
                    if (onSale) {
                        addFilter(onSale.nextElementSibling.textContent);
                    }
                }

                // Attach click event listeners to all checkboxes
                const checkboxes = document.querySelectorAll('input[type="checkbox"]');
                checkboxes.forEach(function (checkbox) {
                    checkbox.addEventListener('click', updateSelectedFiltersDisplay);
                });
            });</script>
        <script>document.addEventListener('DOMContentLoaded', function () {
                // Get the saved sort option from local storage
                const savedSortOption = localStorage.getItem('savedSortOption');

                // If a sort option is saved, set it as the selected option
                if (savedSortOption) {
                    document.getElementById('sort').value = savedSortOption;
                }

                // Get the saved filter options from local storage
                const savedFilters = JSON.parse(localStorage.getItem('savedFilters')) || {};

                // Apply saved filter options
                Object.keys(savedFilters).forEach(function (key) {
                    const value = savedFilters[key];
                    const checkbox = document.querySelector(`input[name="${key}"][value="${value}"]`);
                    if (checkbox) {
                        checkbox.checked = true;
                    }
                });

                // Attach change event listeners to filter checkboxes
                const filterCheckboxes = document.querySelectorAll('input[type="checkbox"]');
                filterCheckboxes.forEach(function (checkbox) {
                    checkbox.addEventListener('change', function () {
                        saveFilterOption(this.name, this.value, this.checked);
                        // Optionally, trigger the form submission or filtering action here
                    });
                });

                // Function to save the selected filter option to local storage
                function saveFilterOption(name, value, isChecked) {
                    let savedFilters = JSON.parse(localStorage.getItem('savedFilters')) || {};
                    if (isChecked) {
                        savedFilters[name] = value;
                    } else {
                        delete savedFilters[name];
                    }
                    localStorage.setItem('savedFilters', JSON.stringify(savedFilters));
                }

                // Function to save the selected sort option to local storage
                function saveSortOption(option) {
                    localStorage.setItem('savedSortOption', option);
                }
                window.addEventListener('load', function () {
                    localStorage.removeItem('savedFilters');
                });
            });</script>

        <script>// Function to save the selected filter option and sort option to local storage
            function saveFilterAndSortOptions(name, value, isChecked) {
                let savedFilters = JSON.parse(localStorage.getItem('savedFilters')) || {};
                if (isChecked) {
                    savedFilters[name] = value;
                } else {
                    delete savedFilters[name];
                }
                localStorage.setItem('savedFilters', JSON.stringify(savedFilters));

                // Save the selected sort option
                const sortOption = document.getElementById('sort').value;
                localStorage.setItem('savedSortOption', sortOption);
            }

            // Attach change event listeners to filter checkboxes
            const filterCheckboxes = document.querySelectorAll('input[type="checkbox"]');
            filterCheckboxes.forEach(function (checkbox) {
                checkbox.addEventListener('change', function () {
                    saveFilterAndSortOptions(this.name, this.value, this.checked);
                    // Optionally, trigger the form submission or filtering action here
                });
            });

            // Function to save the selected sort option to local storage
            function saveSortOption(option) {
                localStorage.setItem('savedSortOption', option);
            }

            // Get the saved sort option from local storage
            const savedSortOption = localStorage.getItem('savedSortOption');
            if (savedSortOption) {
                document.getElementById('sort').value = savedSortOption;
            }</script>



</body>
</html>
