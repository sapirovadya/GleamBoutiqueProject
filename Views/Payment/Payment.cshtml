

@model GleamBoutiqueProject.ViewModel.OrderViewModel



<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="author" content="Untree.co">
    <link rel="shortcut icon" href="favicon.png">

    <meta name="description" content="" />
    <meta name="keywords" content="bootstrap, bootstrap4" />

    <!-- Bootstrap CSS -->
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="/css/tiny-slider.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <title>Payment</title>


    @{
        ViewData["Title"] = "Payment";
    }

</head>

<body>

    <!-- Start Header/Navigation -->
    <nav class="custom-navbar navbar navbar navbar-expand-md navbar-dark bg-dark" arial-label="navigation bar">

        <div class="container">
            <a class="navbar-brand" href="index.html"><span>.</span></a>

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarsFurni" aria-controls="navbarsFurni" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarsFurni">
                <ul class="custom-navbar-nav navbar-nav ms-auto mb-2 mt-mb-md-0">
                    <li class="nav-item active">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li><a class="nav-link" href="../Shop/Shop">Shop</a></li>
                </ul>

                <ul class="custom-navbar-cta navbar-nav mb-2 mb-md-0 ms-5">

                    <li><a class="nav-link" href="../User/SignIn"><img src="~/images/user.svg"></a></li>
                    <li><a class="nav-link" href="../Shop/Cart"><img src="~/images/cart.svg"></a></li>
                </ul>
                <ul class="custom-navbar-cta navbar-nav mb-2 mb-md-0 ms-5">
                    @if (ViewBag.IsLoggedIn != null && ViewBag.IsLoggedIn)
                    {
                        <li>
                            <a href="/User/Logout" style="filter: invert(1);">
                                <img src="~/images/logout1.png" alt="Logout" style="width: 45px; height: 45px; padding-top: 9px;">
                            </a>
                        </li>
                    }
                </ul>
            </div>

        </div>

    </nav>
    <!-- End Header/Navigation -->
    <!-- Start Hero Section -->
    <div class="hero">
        <div class="container">
            <h1>Checkout</h1>
        </div>
    </div>
    <!-- End Hero Section -->

    <div class="untree_co-section" style="padding-top: 30px;">
        <div class="container">
            <div class="row mb-5">
                <div class="col-md-12">
                </div>
            </div>




            <form action="MakePayment" method="post">
                <div class="row">
                    <div class="col-md-6 mb-5 mb-md-0">
                        <h2 class="h3 mb-3 text-black">Billing Details</h2>
                        <div class="p-3 p-lg-5 border bg-white">
                            @if (!string.IsNullOrEmpty(ViewBag.UserName))
                            {
                                <div class="form-group row">
                                    <div class="col-md-6">
                                        <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.FirstName)</div>
                                        <label for="c_fname" class="text-black">First Name <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" id="c_fname" name="OrderPayment.FirstName" value="@ViewBag.UserName" @(string.IsNullOrEmpty(ViewBag.UserName) ? "" : "readonly")>
                                    </div>
                                    <div class="col-md-6">
                                        <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.LastName)</div>
                                        <label for="c_lname" class="text-black">Last Name <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" id="c_lname" name="OrderPayment.LastName" value="@ViewBag.UserLastName" @(string.IsNullOrEmpty(ViewBag.UserLastName) ? "" : "readonly")>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="form-group row">
                                    <div class="col-md-6">
                                        <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.FirstName)</div>
                                        <label for="c_fname" class="text-black">First Name <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" id="c_fname" name="OrderPayment.FirstName" value="@(Model.OrderPayment?.FirstName)">
                                    </div>
                                    <div class="col-md-6">
                                        <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.LastName)</div>
                                        <label for="c_lname" class="text-black">Last Name <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" id="c_lname" name="OrderPayment.LastName" value="@(Model.OrderPayment?.LastName)")>
                                    </div>
                                </div>
                            }
                            <div class="form-group row">
                                <div class="col-md-6">
                                    <label for="c_address" class="text-black">Address <span class="text-danger">*</span></label>
                                    <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.City)</div>
                                    <input type="text" class="form-control" value="@(Model.OrderPayment?.City)" id="c_address" name="OrderPayment.City" placeholder="City">
                                </div>
                                <div class="col-md-6">
                                    <label for="c_address" class="text-black"><span class="text-danger"></span></label>
                                    <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.Street)</div>
                                    <input type="text" class="form-control" value="@(Model.OrderPayment?.Street)" placeholder="Street" name="OrderPayment.Street">
                                </div>
                            </div>

                            <div class="form-group mt-3">
                                <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.Apartment)</div>
                                <input type="text" class="form-control" value="@(Model.OrderPayment?.Apartment)" placeholder="Apartment" name="OrderPayment.Apartment">
                            </div>

                            <div class="form-group row">
                                <div class="col-md-6">
                                    <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.PostalCode)</div>
                                    <label for="c_postal_zip" class="text-black">Postal code <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" value="@(Model.OrderPayment?.PostalCode)" id="c_postal_zip" name="OrderPayment.PostalCode" maxlength="7">
                                </div>
                            </div>

                            <div class="form-group row mb-5">
                                @if (!string.IsNullOrEmpty(ViewBag.UserName))
                                {
                                    <div class="col-md-6">
                                        <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.Email)</div>
                                        <label for="c_email_address" class="text-black">Email<span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" id="c_email_address" name="OrderPayment.Email" value="@ViewBag.UserEmail" @(string.IsNullOrEmpty(ViewBag.UserEmail) ? "" : "readonly")>

                                    </div>
                                }
                                else
                                {
                                    <div class="col-md-6">
                                        <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.Email)</div>
                                        <label for="c_email_address" class="text-black">Email<span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" id="c_email_address" name="OrderPayment.Email" value="@(Model.OrderPayment?.Email)">

                                    </div>
                                }
                                <div class="col-md-6">
                                    <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.Phone)</div>
                                    <label for="c_phone" class="text-black">Phone <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" value="@(Model.OrderPayment?.Phone)" id="c_phone" name="OrderPayment.Phone" maxlength="10">
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="col-md-6">

                        <div class="row mb-5">
                            <div class="col-md-12">
                                <h2 class="h3 mb-3 text-black">Your Order</h2>
                                <div class="p-3 p-lg-5 border bg-white">

                                    <table class="table site-block-order-table mb-5">
                                        <thead>
                                            <tr>
                                                <th>Product</th>
                                                <th>Total</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Loop through the cart items -->
                                            @if (Model != null && Model.OrderList != null)
                                            {
                                                @foreach (var item in Model.OrderList)
                                                {
                                                    <tr>
                                                        <td>@item.PName <strong class="mx-2">x</strong> @item.ProAmount</td>
                                                        <td>@((item.SalePrice != 0 ? item.SalePrice : item.OriginPrice) * item.ProAmount) ₪</td>
                                                    </tr>
                                                }

                                                <!-- Calculate and display cart subtotal -->
                                                <tr>
                                                    <td class="text-black font-weight-bold"><strong>Total Price</strong></td>
                                                    <td class="text-black font-weight-bold">
                                                        @{
                                                            // Calculate the cart subtotal based on the items in the cart
                                                            decimal cartSubtotal = (Model.OrderList).Sum(item => (item.SalePrice != 0 ? item.SalePrice : item.OriginPrice) * item.ProAmount);
                                                        }
                                                        <strong>@cartSubtotal.ToString() ₪</strong>
                                                    </td>

                                                </tr>
                                            }
                                        </tbody>

                                    </table>


                                    <div class="border p-3 mb-5">
                                        <h3 class="h6 mb-0">
                                            <a class="d-block" data-bs-toggle="collapse" href="#collapsecreditcard" role="button" aria-expanded="false" aria-controls="collapsecreditcard" id="creditCardLink">
                                                Credit Card Payment
                                            </a>
                                        </h3>
                                        <!--The textbox of credit card payments -->
                                        <div class="form-group">
                                            <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.CreditCardNumber)</div>
                                            <label for="creditCardNumber" class="text-black">Credit Card Number:<span class="text-danger">*</span></label>
                                            <input type="text" class="form-control" id="creditCardNumber" name="OrderPayment.CreditCardNumber" placeholder="0000 0000 0000 0000" value="@(Model.OrderPayment?.CreditCardNumber)" maxlength="16" />
                                            <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.ExpiryDate)</div>
                                            <label for="ExpiryDate" class="text-black">Expiry Date:<span class="text-danger">*</span></label>
                                            <input type="text" class="form-control" id="ExpiryDate" name="OrderPayment.ExpiryDate" placeholder="MM/YY" value="@(Model.OrderPayment?.ExpiryDate)" maxlength="5" />
                                            <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.CVV)</div>
                                            <label for="SecurityNumber" class="text-black">CVV:<span class="text-danger">*</span></label>
                                            <input type="text" class="form-control" id="SecurityNumber" name="OrderPayment.CVV" placeholder="000" value="@(Model.OrderPayment?.CVV)" maxlength="3" />
                                            <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.ID)</div>
                                            <label for="IdOwner" class="text-black">ID:<span class="text-danger">*</span></label>
                                            <input type="text" class="form-control" id="IdOwner" name="OrderPayment.ID" placeholder="000000000" value="@(Model.OrderPayment?.ID)" maxlength="9" />
                                            <div style="color:red;" class="validation-message">@Html.ValidationMessageFor(x => x.OrderPayment.FullName)</div>
                                            <label for="NameOwner" class="text-black">Full Name:<span class="text-danger">*</span></label>
                                            <input type="text" class="form-control" id="NameOwner" name="OrderPayment.FullName" value="@(Model.OrderPayment?.FullName)" />
                                        </div>

                                    </div>

                                    <div class="input-group-append text-center">
                                        <input class="btn btn-black btn-sm" type="submit" value="Place Order" />
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </form>
            <!-- </form> -->
        </div>
    </div>

    <footer class="footer-section">
        <div class="container relative">


            <div class="row g-5 mb-5">
                <div class="col-lg-4">
                    <div class="mb-4 footer-logo-wrap"><a href="../Home/HomePage" class="footer-logo">GleamBoutique<span>.</span></a></div>
                    <p class="mb-4">
                        Discover unique handmade jewelry by Sapir, May, and Oriya, where passion meets creativity to reflect the beauty of nature and the artistry of the designers.
                    </p>

                    <ul class="list-unstyled custom-social">
                        <li><a href="https://www.facebook.com/profile.php?id=61558503081378" target="_blank"><span class="fa fa-brands fa-facebook-f"></span></a></li>
                        <li><a href="https://www.instagram.com/gleamboutiquejewelry/" target="_blank"><span class="fa fa-brands fa-instagram"></span></a></li>
                    </ul>
                </div>



            </div>

        </div>
    </footer>

    <script src="/js/bootstrap.bundle.min.js"></script>
    <script src="/js/tiny-slider.js"></script>
    <script src="/js/custom.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const creditCardFields = document.querySelectorAll('#creditCardNumber, #ExpiryDate, #SecurityNumber, #IdOwner, #NameOwner, label[for="creditCardNumber"], label[for="ExpiryDate"], label[for="SecurityNumber"], label[for="IdOwner"], label[for="NameOwner"]');

            // Function to hide all credit card fields
            function hideCreditCardFields() {
                creditCardFields.forEach(field => {
                    field.style.display = 'none';
                });
            }

            // Function to show credit card fields
            function showCreditCardFields() {
                creditCardFields.forEach(field => {
                    field.style.display = ''; // Revert to default display
                });
            }

            // Check for validation errors related to credit card and adjust visibility accordingly
            @if (!ViewData.ModelState.IsValid && ViewData.ModelState.Any(ms => ms.Key.StartsWith("OrderPayment.CreditCard")))
            {
                @:showCreditCardFields();
            }
            else
            {
                @:hideCreditCardFields();
            }

            const creditCardLink = document.getElementById('creditCardLink');
            creditCardLink.addEventListener('click', (event) => {
                event.preventDefault(); // Prevent the default anchor action
                showCreditCardFields();
            });

            const paypalLink = document.getElementById('paypalLink');
            paypalLink.addEventListener('click', (event) => {
                event.preventDefault(); // Prevent the default anchor action
                hideCreditCardFields();
            });
        });
    </script>




    <script>
        document.getElementById('ExpiryDate').addEventListener('input', function (e) {
            // Remove all slashes then insert one after the second character
            let value = this.value.replace(/\//g, '');
            if (value.length > 2) {
                value = value.substring(0, 2) + '/' + value.substring(2);
            }

            this.value = value; // Set the modified value back to the input
        });</script>

</body>

</html>
